from datetime import date

# –¢—É“ì–∏–ª–≥–∞–Ω —Å–∞–Ω–∞–Ω–∏ —Å—û—Ä–∞—à
birth_date_str = input("–¢—É“ì–∏–ª–≥–∞–Ω —Å–∞–Ω–∞–∏–Ω–≥–∏–∑–Ω–∏ –∫–∏—Ä–∏—Ç–∏–Ω–≥ (–π–∏–ª-–æ–π-–∫—É–Ω): ")
birth_date = date.fromisoformat(birth_date_str)
today = date.today()

# –Å—à–Ω–∏ “≥–∏—Å–æ–±–ª–∞—à
years = today.year - birth_date.year
months = today.month - birth_date.month
days = today.day - birth_date.day

if days < 0:
    months -= 1
    days += 30
if months < 0:
    years -= 1
    months += 12

print(f"–°–∏–∑–Ω–∏–Ω–≥ —ë—à–∏–Ω–≥–∏–∑: {years} –π–∏–ª, {months} –æ–π, {days} –∫—É–Ω.")




from datetime import date, timedelta

birth_date_str = input("–¢—É“ì–∏–ª–≥–∞–Ω —Å–∞–Ω–∞–∏–Ω–≥–∏–∑–Ω–∏ –∫–∏—Ä–∏—Ç–∏–Ω–≥ (–π–∏–ª-–æ–π-–∫—É–Ω): ")
birth_date = date.fromisoformat(birth_date_str)
today = date.today()

next_birthday = date(today.year, birth_date.month, birth_date.day)
if next_birthday < today:
    next_birthday = date(today.year + 1, birth_date.month, birth_date.day)

days_left = (next_birthday - today).days
print(f"–ö–µ–ª–∞—Å–∏ —Ç—É“ì–∏–ª–≥–∞–Ω –∫—É–Ω–≥–∞—á–∞ {days_left} –∫—É–Ω “õ–æ–ª–¥–∏ üéâ")



from datetime import datetime, timedelta

now_str = input("–ñ–æ—Ä–∏–π —Å–∞–Ω–∞ –≤–∞ –≤–∞“õ—Ç–Ω–∏ –∫–∏—Ä–∏—Ç–∏–Ω–≥ (–π–∏–ª-–æ–π-–∫—É–Ω —Å–æ–∞—Ç:–¥–∞“õ–∏“õ–∞): ")
duration_h = int(input("–ú–∞–∂–ª–∏—Å —Å–æ–∞—Ç–ª–∞—Ä–∏: "))
duration_m = int(input("–ú–∞–∂–ª–∏—Å –¥–∞“õ–∏“õ–∞–ª–∞—Ä–∏: "))

start_time = datetime.strptime(now_str, "%Y-%m-%d %H:%M")
end_time = start_time + timedelta(hours=duration_h, minutes=duration_m)

print("–ú–∞–∂–ª–∏—Å —Ç—É–≥–∞–π–¥–∏–≥–∞–Ω –≤–∞“õ—Ç:", end_time.strftime("%Y-%m-%d %H:%M"))



  from datetime import datetime
import pytz

# –í–∞“õ—Ç –≤–∞ –ø–æ—è—Å–ª–∞—Ä–Ω–∏ —Å—û—Ä–∞—à
time_str = input("–°–∞–Ω–∞ –≤–∞ –≤–∞“õ—Ç–Ω–∏ –∫–∏—Ä–∏—Ç–∏–Ω–≥ (2025-12-12 20:20): ")
from_zone = input("–ñ–æ—Ä–∏–π –≤–∞“õ—Ç –ø–æ—è—Å–∏ (–º–∞—Å–∞–ª–∞–Ω: Asia/Tashkent): ")
to_zone = input("“ö–∞–π—Å–∏ –ø–æ—è–≥–∞ –∞–π–ª–∞–Ω—Ç–∏—Ä–∏—à–Ω–∏ –∏—Å—Ç–∞–π—Å–∏–∑? ")

dt = datetime.strptime(time_str, "%Y-%m-%d %H:%M")
from_tz = pytz.timezone(from_zone)
to_tz = pytz.timezone(to_zone)

local_dt = from_tz.localize(dt)
converted_dt = local_dt.astimezone(to_tz)

print("–ê–π–ª–∞–Ω—Ç–∏—Ä–∏–ª–≥–∞–Ω —Å–∞–Ω–∞ –≤–∞ –≤–∞“õ—Ç:", converted_dt.strftime("%Y-%m-%d %H:%M"))




  from datetime import datetime
import time

target_str = input("–ë—û–ª–∞–∂–∞–∫ —Å–∞–Ω–∞ –≤–∞ –≤–∞“õ—Ç–Ω–∏ –∫–∏—Ä–∏—Ç–∏–Ω–≥ (–π–∏–ª-–æ–π-–∫—É–Ω —Å–æ–∞—Ç:–¥–∞“õ–∏“õ–∞:—Å–æ–Ω–∏—è): ")
target = datetime.strptime(target_str, "%Y-%m-%d %H:%M:%S")

while True:
    now = datetime.now()
    if now >= target:
        print("–í–∞“õ—Ç —Ç—É–≥–∞–¥–∏! ‚è∞")
        break
    remaining = target - now
    print(f"“ö–æ–ª–¥–∏: {remaining}", end="\r")
    time.sleep(1)



  import re

email = input("–≠–ª–µ–∫—Ç—Ä–æ–Ω –ø–æ—á—Ç–∞ –º–∞–Ω–∑–∏–ª–∏–Ω–≥–∏–∑–Ω–∏ –∫–∏—Ä–∏—Ç–∏–Ω–≥: ")

pattern = r"^[\w\.-]+@[\w\.-]+\.\w+$"
if re.match(pattern, email):
    print("‚úÖ –¢—û“ì—Ä–∏ —ç–ª–µ–∫—Ç—Ä–æ–Ω –ø–æ—á—Ç–∞ —Ñ–æ—Ä–º–∞—Ç–∏.")
else:
    print("‚ùå –ù–æ—Ç—û“ì—Ä–∏ —ç–ª–µ–∫—Ç—Ä–æ–Ω –ø–æ—á—Ç–∞ —Ñ–æ—Ä–º–∞—Ç–∏.")


  phone = input("–¢–µ–ª–µ—Ñ–æ–Ω —Ä–∞“õ–∞–º–∏–Ω–≥–∏–∑–Ω–∏ –∫–∏—Ä–∏—Ç–∏–Ω–≥ (–º–∞—Å–∞–ª–∞–Ω: 1234567890): ")
if len(phone) == 10 and phone.isdigit():
    formatted = f"({phone[0:3]}) {phone[3:6]}-{phone[6:]}"
    print("–§–æ—Ä–º–∞—Ç–ª–∞–Ω–≥–∞–Ω —Ä–∞“õ–∞–º:", formatted)
else:
    print("–ù–æ—Ç—û“ì—Ä–∏ —Ä–∞“õ–∞–º —Ñ–æ—Ä–º–∞—Ç–∏!")
    


  import re

password = input("–ü–∞—Ä–æ–ª–Ω–∏ –∫–∏—Ä–∏—Ç–∏–Ω–≥: ")

if len(password) < 8:
    print("–ü–∞—Ä–æ–ª –∂—É–¥–∞ “õ–∏—Å“õ–∞ (–∫–∞–º–∏–¥–∞ 8 —Ç–∞ –±–µ–ª–≥–∏–¥–∞–Ω –∏–±–æ—Ä–∞—Ç –±—û–ª–∏—à–∏ –∫–µ—Ä–∞–∫).")
elif not re.search(r"[A-Z]", password):
    print("–ü–∞—Ä–æ–ª–¥–∞ –∫–∞–º–∏–¥–∞ –±–∏—Ç—Ç–∞ –∫–∞—Ç—Ç–∞ “≥–∞—Ä—Ñ –±—û–ª–∏—à–∏ –∫–µ—Ä–∞–∫.")
elif not re.search(r"[a-z]", password):
    print("–ü–∞—Ä–æ–ª–¥–∞ –∫–∞–º–∏–¥–∞ –±–∏—Ç—Ç–∞ –∫–∏—á–∏–∫ “≥–∞—Ä—Ñ –±—û–ª–∏—à–∏ –∫–µ—Ä–∞–∫.")
elif not re.search(r"[0-9]", password):
    print("–ü–∞—Ä–æ–ª–¥–∞ –∫–∞–º–∏–¥–∞ –±–∏—Ç—Ç–∞ —Ä–∞“õ–∞–º –±—û–ª–∏—à–∏ –∫–µ—Ä–∞–∫.")
else:
    print("‚úÖ –ü–∞—Ä–æ–ª –º—É—Å—Ç–∞“≥–∫–∞–º!")


  text = input("–ú–∞—Ç–Ω–Ω–∏ –∫–∏—Ä–∏—Ç–∏–Ω–≥: ")
word = input("“ö–∏–¥–∏—Ä–∏–ª–∞—ë—Ç–≥–∞–Ω —Å—û–∑–Ω–∏ –∫–∏—Ä–∏—Ç–∏–Ω–≥: ")

positions = []
index = text.lower().find(word.lower())
while index != -1:
    positions.append(index)
    index = text.lower().find(word.lower(), index + 1)

if positions:
    print(f"'{word}' —Å—û–∑–∏ {len(positions)} –º–∞—Ä—Ç–∞ —É—á—Ä–∞–¥–∏. –ñ–æ–π–ª–∞—à—É–≤–ª–∞—Ä–∏: {positions}")
else:
    print("–°—û–∑ —Ç–æ–ø–∏–ª–º–∞–¥–∏.")


  import re

text = input("–ú–∞—Ç–Ω–Ω–∏ –∫–∏—Ä–∏—Ç–∏–Ω–≥: ")

# YYYY-MM-DD —ë–∫–∏ DD/MM/YYYY —Ñ–æ—Ä–º–∞—Ç–¥–∞–≥–∏ —Å–∞–Ω–∞–ª–∞—Ä–Ω–∏ –∏–∑–ª–∞—à
dates = re.findall(r"\b(\d{4}-\d{2}-\d{2}|\d{2}/\d{2}/\d{4})\b", text)

if dates:
    print("–ú–∞—Ç–Ω–¥–∞–≥–∏ —Å–∞–Ω–∞–ª–∞—Ä:")
    for d in dates:
        print("-", d)
else:
    print("–°–∞–Ω–∞ —Ç–æ–ø–∏–ª–º–∞–¥–∏.")

  
