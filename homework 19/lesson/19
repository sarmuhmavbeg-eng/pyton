import pandas as pd

# –§–∞–π–ª–Ω–∏ —û“õ–∏—à
sales_df = pd.read_csv("task/sales_data.csv")

# –ö–∞—Ç–µ–≥–æ—Ä–∏—è –±—û–π–∏—á–∞ –≥—É—Ä—É“≥–ª–∞–±, —É–º—É–º–∏–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ “≥–∏—Å–æ–±–ª–∞—à
stats = sales_df.groupby("Category").agg(
    total_quantity=('Quantity', 'sum'),             # —É–º—É–º–∏–π —Å–æ—Ç–∏–ª–≥–∞–Ω –º–∞“≥—Å—É–ª–æ—Ç —Å–æ–Ω–∏
    avg_price=('Price', 'mean'),                    # —û—Ä—Ç–∞—á–∞ –Ω–∞—Ä—Ö
    max_quantity_per_sale=('Quantity', 'max')       # –±–∏—Ä –æ–ø–µ—Ä–∞—Ü–∏—è–¥–∞ —ç–Ω–≥ –∫—û–ø —Å–æ—Ç–∏–ª–≥–∞–Ω —Å–æ–Ω–∏
).reset_index()

print("üìä –ö–∞—Ç–µ–≥–æ—Ä–∏—è –±—û–π–∏—á–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
print(stats, "\n")

# “≤–∞—Ä –±–∏—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏—è–¥–∞ —ç–Ω–≥ –∫—û–ø —Å–æ—Ç–∏–ª–≥–∞–Ω —Ç–æ–≤–∞—Ä
top_products = (
    sales_df.groupby(["Category", "Product"])["Quantity"]
    .sum()
    .reset_index()
    .sort_values(["Category", "Quantity"], ascending=[True, False])
)
top_products = top_products.groupby("Category").head(1)

print(" “≤–∞—Ä –±–∏—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏—è–¥–∞ —ç–Ω–≥ –∫—û–ø —Å–æ—Ç–∏–ª–≥–∞–Ω —Ç–æ–≤–∞—Ä:")
print(top_products, "\n")

#Ô∏è‚É£ –≠–Ω–≥ —é“õ–æ—Ä–∏ —É–º—É–º–∏–π —Ñ–æ–π–¥–∞ (Quantity * Price) “õ–∞–π—Å–∏ —Å–∞–Ω–∞–¥–∞ –±—û–ª–≥–∞–Ω
sales_df["TotalSales"] = sales_df["Quantity"] * sales_df["Price"]
max_sales_date = (
    sales_df.groupby("Date")["TotalSales"]
    .sum()
    .reset_index()
    .sort_values("TotalSales", ascending=False)
    .head(1)
)

print("–≠–Ω–≥ —é“õ–æ—Ä–∏ —Å–∞–≤–¥–æ –±—û–ª–≥–∞–Ω —Å–∞–Ω–∞:")
print(max_sales_date)



import pandas as pd

# –§–∞–π–ª–Ω–∏ —û“õ–∏—à
orders_df = pd.read_csv("task/customer_orders.csv")

# 20 —Ç–∞ –±—É—é—Ä—Ç–º–∞–¥–∞–Ω –∫–∞–º “õ–∏–ª–≥–∞–Ω –º–∏–∂–æ–∑–ª–∞—Ä–Ω–∏ –æ–ª–∏–± —Ç–∞—à–ª–∞—à
customer_orders_count = orders_df.groupby("CustomerID")["OrderID"].count().reset_index(name="order_count")
filtered_customers = customer_orders_count[customer_orders_count["order_count"] >= 20]
print("20 —Ç–∞ —ë–∫–∏ —É–Ω–¥–∞–Ω –∫—û–ø –±—É—é—Ä—Ç–º–∞ “õ–∏–ª–≥–∞–Ω –º–∏–∂–æ–∑–ª–∞—Ä:")
print(filtered_customers.head(), "\n")

# –é—Ä—Ç–∞—á–∞ –Ω–∞—Ä—Ö–∏ 120 –¥–æ–ª–ª–∞—Ä–¥–∞–Ω —é“õ–æ—Ä–∏ –±—û–ª–≥–∞–Ω –º–∏–∂–æ–∑–ª–∞—Ä
avg_price_per_customer = orders_df.groupby("CustomerID")["Price"].mean().reset_index(name="avg_price")
expensive_customers = avg_price_per_customer[avg_price_per_customer["avg_price"] > 120]
print(" –é—Ä—Ç–∞—á–∞ –Ω–∞—Ä—Ö–∏ 120 –¥–æ–ª–ª–∞—Ä–¥–∞–Ω —é“õ–æ—Ä–∏ –±—û–ª–≥–∞–Ω –º–∏–∂–æ–∑–ª–∞—Ä:")
print(expensive_customers.head(), "\n")

# “≤–∞—Ä –±–∏—Ä —Ç–æ–≤–∞—Ä —É—á—É–Ω —É–º—É–º–∏–π —Å–æ–Ω–∏ –≤–∞ —É–º—É–º–∏–π “õ–∏–π–º–∞—Ç–∏
product_summary = (
    orders_df.assign(total_value=orders_df["Quantity"] * orders_df["Price"])
    .groupby("Product")
    .agg(total_quantity=('Quantity', 'sum'), total_value=('total_value', 'sum'))
    .reset_index()
)

filtered_products = product_summary[product_summary["total_quantity"] >= 5]
print("5 —Ç–∞–¥–∞–Ω –∫—û–ø —Å–æ—Ç–∏–ª–≥–∞–Ω —Ç–æ–≤–∞—Ä–ª–∞—Ä:")
print(filtered_products.head(), "\n")





import pandas as pd
import sqlite3

# SQLite –±–∞–∑–∞–¥–∞–Ω –º–∞—ä–ª—É–º–æ—Ç–ª–∞—Ä–Ω–∏ –æ–ª–∏—à
conn = sqlite3.connect("task/population.db")
population_df = pd.read_sql_query("SELECT * FROM population", conn)
conn.close()

print("Population –º–∞—ä–ª—É–º–æ—Ç–ª–∞—Ä –Ω–∞–º—É–Ω–∞—Å–∏:")
print(population_df.head(), "\n")

# Excel —Ñ–∞–π–ª–¥–∞–Ω –º–∞–æ—à –∫–∞—Ç–µ–≥–æ—Ä–∏—è –¥–∏–∞–ø–∞–∑–æ–Ω–ª–∞—Ä–∏–Ω–∏ —û“õ–∏—à
salary_ranges = pd.read_excel("task/population salary analysis.xlsx")
print(" –ú–∞–æ—à –¥–∏–∞–ø–∞–∑–æ–Ω–ª–∞—Ä–∏:")
print(salary_ranges, "\n")

# “≤–∞—Ä –±–∏—Ä –∏–Ω—Å–æ–Ω–Ω–∏ —Ç–µ–≥–∏—à–ª–∏ –º–∞–æ—à –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Å–∏–≥–∞ –∞–∂—Ä–∞—Ç–∏—à
# Faraz qilamiz, Excel faylida "Category", "MinSalary", "MaxSalary" degan ustunlar bor
def get_salary_category(salary):
    row = salary_ranges[(salary_ranges["MinSalary"] <= salary) & (salary <= salary_ranges["MaxSalary"])]
    return row["Category"].values[0] if not row.empty else "–ë–æ—à“õ–∞"

population_df["SalaryCategory"] = population_df["Salary"].apply(get_salary_category)

# –ö–∞—Ç–µ–≥–æ—Ä–∏—è –±—û–π–∏—á–∞ —É–º—É–º–∏–π –∫—û—Ä—Å–∞—Ç–∫–∏—á–ª–∞—Ä
category_stats = population_df.groupby("SalaryCategory").agg(
    population_count=('Salary', 'count'),
    avg_salary=('Salary', 'mean')
).reset_index()

# “≤–∞—Ä –±–∏—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏—è–Ω–∏–Ω–≥ –∞“≥–æ–ª–∏–¥–∞–≥–∏ —É–ª—É—à–∏ (%)
total_population = population_df["Salary"].count()
category_stats["population_share_%"] = (category_stats["population_count"] / total_population * 100).round(2)

print(" –ú–∞–æ—à –∫–∞—Ç–µ–≥–æ—Ä–∏—è–ª–∞—Ä–∏ –±—û–π–∏—á–∞ —Ç–∞“≥–ª–∏–ª:")
print(category_stats, "\n")

# “≤–∞—Ä –±–∏—Ä —à—Ç–∞—Ç –±—û–π–∏—á–∞ “≥–∞–º —Ö—É–¥–¥–∏ —à—É–Ω–¥–∞–π “≥–∏—Å–æ–±–ª–∞—à
state_salary_stats = (
    population_df.groupby(["State", "SalaryCategory"])
    .agg(
        population_count=('Salary', 'count'),
        avg_salary=('Salary', 'mean')
    )
    .reset_index()
)
print("–®—Ç–∞—Ç–ª–∞—Ä –±—û–π–∏—á–∞ –º–∞–æ—à —Ç–∞“≥–ª–∏–ª–∏:")
print(state_salary_stats.head(), "\n")

