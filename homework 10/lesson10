1
from datetime import datetime

class Task:
    def __init__(self, title, description, due_date):
        self.title = title
        self.description = description
        self.due_date = datetime.strptime(due_date, "%Y-%m-%d")
        self.completed = False

    def mark_complete(self):
        self.completed = True

    def __str__(self):
        status = "‚úÖ" if self.completed else "‚ùå"
        return f"{status} {self.title} (–¥–µ–¥–ª–∞–π–Ω: {self.due_date.date()}) - {self.description}"

class ToDoList:
    def __init__(self):
        self.tasks = []

    def add_task(self, task):
        self.tasks.append(task)

    def list_all(self):
        for i, task in enumerate(self.tasks, 1):
            print(i, task)

    def list_incomplete(self):
        for i, task in enumerate(self.tasks, 1):
            if not task.completed:
                print(i, task)

    def mark_task_complete(self, index):
        if 0 <= index < len(self.tasks):
            self.tasks[index].mark_complete()
            print("–ó–∞–¥–∞—á–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        else:
            print("–ù–µ–≤–µ—Ä–Ω—ã–π –∏–Ω–¥–µ–∫—Å –∑–∞–¥–∞—á–∏")

def main():
    todo = ToDoList()
    while True:
        print("\nüìã ToDo Menu:\n1. –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É\n2. –û—Ç–º–µ—Ç–∏—Ç—å –∑–∞–¥–∞—á—É –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—É—é\n3. –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∑–∞–¥–∞—á–∏\n4. –ü–æ–∫–∞–∑–∞—Ç—å –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏\n5. –í—ã—Ö–æ–¥")
        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ: ")
        if choice == "1":
            title = input("–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏: ")
            desc = input("–û–ø–∏—Å–∞–Ω–∏–µ: ")
            due = input("–î–µ–¥–ª–∞–π–Ω (YYYY-MM-DD): ")
            todo.add_task(Task(title, desc, due))
        elif choice == "2":
            todo.list_all()
            idx = int(input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–¥–∞—á–∏: ")) - 1
            todo.mark_task_complete(idx)
        elif choice == "3":
            todo.list_all()
        elif choice == "4":
            todo.list_incomplete()
        elif choice == "5":
            break
        else:
            print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")

if __name__ == "__main__":
    main()




2


class Post:
    def __init__(self, title, content, author):
        self.title = title
        self.content = content
        self.author = author

    def __str__(self):
        return f"üìå {self.title} by {self.author}\n{self.content}\n"

class Blog:
    def __init__(self):
        self.posts = []

    def add_post(self, post):
        self.posts.append(post)

    def list_posts(self):
        for p in self.posts:
            print(p)

    def posts_by_author(self, author):
        for p in self.posts:
            if p.author == author:
                print(p)

    def delete_post(self, title):
        self.posts = [p for p in self.posts if p.title != title]

    def edit_post(self, old_title, new_title, new_content):
        for p in self.posts:
            if p.title == old_title:
                p.title, p.content = new_title, new_content
                print("–ü–æ—Å—Ç –æ–±–Ω–æ–≤–ª—ë–Ω!")

    def latest_posts(self, n=3):
        for p in self.posts[-n:]:
            print(p)

def main():
    blog = Blog()
    while True:
        print("\nüìù Blog Menu:\n1. –î–æ–±–∞–≤–∏—Ç—å –ø–æ—Å—Ç\n2. –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ø–æ—Å—Ç—ã\n3. –ü–æ—Å—Ç—ã –ø–æ –∞–≤—Ç–æ—Ä—É\n4. –£–¥–∞–ª–∏—Ç—å –ø–æ—Å—Ç\n5. –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç\n6. –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ—Å—Ç—ã\n7. –í—ã—Ö–æ–¥")
        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ: ")
        if choice == "1":
            t = input("–ó–∞–≥–æ–ª–æ–≤–æ–∫: ")
            c = input("–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ: ")
            a = input("–ê–≤—Ç–æ—Ä: ")
            blog.add_post(Post(t, c, a))
        elif choice == "2":
            blog.list_posts()
        elif choice == "3":
            a = input("–ê–≤—Ç–æ—Ä: ")
            blog.posts_by_author(a)
        elif choice == "4":
            t = input("–ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ—Å—Ç–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ")
            blog.delete_post(t)
        elif choice == "5":
            old = input("–°—Ç–∞—Ä—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫: ")
            new = input("–ù–æ–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫: ")
            cont = input("–ù–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ: ")
            blog.edit_post(old, new, cont)
        elif choice == "6":
            blog.latest_posts()
        elif choice == "7":
            break

if __name__ == "__main__":
    main()



3

class Account:
    def __init__(self, acc_number, holder, balance=0):
        self.acc_number = acc_number
        self.holder = holder
        self.balance = balance

    def deposit(self, amount):
        self.balance += amount

    def withdraw(self, amount):
        if self.balance >= amount:
            self.balance -= amount
        else:
            print("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!")

    def __str__(self):
        return f"{self.holder} ({self.acc_number}) ‚Äî –ë–∞–ª–∞–Ω—Å: {self.balance}"

class Bank:
    def __init__(self):
        self.accounts = {}

    def add_account(self, account):
        self.accounts[account.acc_number] = account

    def get_account(self, acc_number):
        return self.accounts.get(acc_number)

    def transfer(self, from_acc, to_acc, amount):
        if from_acc in self.accounts and to_acc in self.accounts:
            if self.accounts[from_acc].balance >= amount:
                self.accounts[from_acc].withdraw(amount)
                self.accounts[to_acc].deposit(amount)
                print(f"–ü–µ—Ä–µ–≤–æ–¥ {amount} –≤—ã–ø–æ–ª–Ω–µ–Ω!")
            else:
                print("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤")
        else:
            print("‚ùå –°—á—ë—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")

def main():
    bank = Bank()
    while True:
        print("\nüè¶ Bank Menu:\n1. –î–æ–±–∞–≤–∏—Ç—å —Å—á—ë—Ç\n2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å\n3. –ü–æ–ø–æ–ª–Ω–∏—Ç—å\n4. –°–Ω—è—Ç—å\n5. –ü–µ—Ä–µ–≤–æ–¥\n6. –í—Å–µ —Å—á–µ—Ç–∞\n7. –í—ã—Ö–æ–¥")
        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ: ")
        if choice == "1":
            acc = input("–ù–æ–º–µ—Ä —Å—á—ë—Ç–∞: ")
            name = input("–ò–º—è –≤–ª–∞–¥–µ–ª—å—Ü–∞: ")
            bank.add_account(Account(acc, name))
        elif choice == "2":
            acc = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å—á—ë—Ç–∞: ")
            account = bank.get_account(acc)
            if account: print(account)
        elif choice == "3":
            acc = input("–°—á—ë—Ç: ")
            amt = float(input("–°—É–º–º–∞: "))
            account = bank.get_account(acc)
            if account: account.deposit(amt)
        elif choice == "4":
            acc = input("–°—á—ë—Ç: ")
            amt = float(input("–°—É–º–º–∞: "))
            account = bank.get_account(acc)
            if account: account.withdraw(amt)
        elif choice == "5":
            from_acc = input("–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: ")
            to_acc = input("–ü–æ–ª—É—á–∞—Ç–µ–ª—å: ")
            amt = float(input("–°—É–º–º–∞: "))
            bank.transfer(from_acc, to_acc, amt)
        elif choice == "6":
            for acc in bank.accounts.values():
                print(acc)
        elif choice == "7":
            break

if __name__ == "__main__":
    main()


# Quick test
def test_todo_list():
    todo = ToDoList()
    todo.add_task("Learn Python", "Complete OOP exercises", "2024-12-31")
    todo.add_task("Buy groceries", "Milk, Eggs, Bread", "2024-01-15")
    todo.list_all_tasks()
    todo.mark_task_complete(0)
    todo.list_incomplete_tasks()

# test_todo_list()




# Quick test
def test_blog_system():
    blog = Blog()
    blog.add_post("Python Basics", "Learning Python is fun!", "John Doe")
    blog.add_post("OOP in Python", "Classes and objects", "Jane Smith")
    blog.list_all_posts()
    blog.list_posts_by_author("John Doe")

# test_blog_system()


# Quick test
def test_banking_system():
    bank = Bank("Test Bank")
    acc1 = bank.create_account("Alice", 1000)
    acc2 = bank.create_account("Bob", 500)
    bank.deposit(acc1, 200)
    bank.transfer(acc1, acc2, 300)
    bank.list_all_accounts()

# test_banking_system()

