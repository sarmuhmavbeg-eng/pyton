import json

# JSON —Ñ–∞–π–ª–Ω–∏ —û“õ–∏—à
with open("students.json", "r", encoding="utf-8") as f:
    students = json.load(f)

# “≤–∞—Ä –±–∏—Ä —Ç–∞–ª–∞–±–∞ “≥–∞“õ–∏–¥–∞ –º–∞—ä–ª—É–º–æ—Ç —á–∏“õ–∞—Ä–∏—à
for student in students:
    print(" –¢–∞–ª–∞–±–∞:", student.get("ism"))
    print("   –Å—à:", student.get("yosh"))
    print("   –ì—É—Ä—É“≥:", student.get("guruh"))
    print("   –ë–∞“≥–æ–ª–∞—Ä:", student.get("baholar"))
    print("-" * 40)


[
  {"ism": "Sardor", "yosh": 20, "guruh": "CS-21", "baholar": [5, 4, 5]},
  {"ism": "Sarvar", "yosh": 19, "guruh": "CS-22", "baholar": [4, 5, 4]}
]


import requests

# OpenWeather API (—Ç–µ—Å—Ç —É—á—É–Ω –¥–µ–º–æ –∫–∞–ª–∏—Ç —ë–∫–∏ —û–∑ API –∫–∞–ª–∏—Ç–∏–Ω–≥–∏–∑–Ω–∏ –∫–∏—Ä–∏—Ç–∏–Ω–≥)
API_KEY = "your_api_key_here"  # <-- –ë—É –∂–æ–π–≥–∞ —û–∑ –∫–∞–ª–∏—Ç–∏–Ω–≥–∏–∑–Ω–∏ —ë–∑–∏–Ω–≥
shahar = "Tashkent"
url = f"https://api.openweathermap.org/data/2.5/weather?q={shahar}&appid={API_KEY}&units=metric&lang=uz"

javob = requests.get(url)
data = javob.json()

if javob.status_code == 200:
    print(f" {shahar} —à–∞“≥—Ä–∏–¥–∞–≥–∏ –æ–±-“≥–∞–≤–æ:")
    print("“≤–∞—Ä–æ—Ä–∞—Ç:", data["main"]["temp"], "¬∞C")
    print("“≤–∏—Å —ç—Ç–∏–ª–∞–¥–∏:", data["main"]["feels_like"], "¬∞C")
    print("–ù–∞–º–ª–∏–∫:", data["main"]["humidity"], "%")
    print("–¢–∞–≤—Å–∏—Ñ:", data["weather"][0]["description"])
else:
    print("–ú–∞—ä–ª—É–º–æ—Ç–Ω–∏ –æ–ª–∏–± –±—û–ª–º–∞–¥–∏. –ö–æ–¥:", javob.status_code)




import json
import os

fayl = "books.json"

# –ê–≥–∞—Ä —Ñ–∞–π–ª –±—û–ª–º–∞—Å–∞, –±—û—à —Ä—û–π—Ö–∞—Ç —è—Ä–∞—Ç–∞–º–∏–∑
if not os.path.exists(fayl):
    with open(fayl, "w", encoding="utf-8") as f:
        json.dump([], f, ensure_ascii=False, indent=4)

# –ö–∏—Ç–æ–±–ª–∞—Ä —Ä—û–π—Ö–∞—Ç–∏–Ω–∏ —û“õ–∏—à
with open(fayl, "r", encoding="utf-8") as f:
    books = json.load(f)

def saqlash():
    with open(fayl, "w", encoding="utf-8") as f:
        json.dump(books, f, ensure_ascii=False, indent=4)

while True:
    print("\n –ö–∏—Ç–æ–±–ª–∞—Ä —Ç–∏–∑–∏–º–∏:")
    print("1. –Ø–Ω–≥–∏ –∫–∏—Ç–æ–± “õ—û—à–∏—à")
    print("2. –ö–∏—Ç–æ–±–Ω–∏ —è–Ω–≥–∏–ª–∞—à")
    print("3. –ö–∏—Ç–æ–±–Ω–∏ —û—á–∏—Ä–∏—à")
    print("4. –ë–∞—Ä—á–∞ –∫–∏—Ç–æ–±–ª–∞—Ä–Ω–∏ –∫—û—Ä–∏—à")
    print("0. –ß–∏“õ–∏—à")

    tanlov = input("–¢–∞–Ω–ª–æ–≤–∏–Ω–≥–∏–∑: ")

    if tanlov == "1":
        nom = input("–ö–∏—Ç–æ–± –Ω–æ–º–∏: ")
        muallif = input("–ú—É–∞–ª–ª–∏—Ñ: ")
        yil = input("–ù–∞—à—Ä –π–∏–ª–∏: ")
        books.append({"nom": nom, "muallif": muallif, "yil": yil})
        saqlash()
        print("–ö–∏—Ç–æ–± “õ—û—à–∏–ª–¥–∏.")

    elif tanlov == "2":
        nom = input("–Ø–Ω–≥–∏–ª–∞–Ω–∞–¥–∏–≥–∞–Ω –∫–∏—Ç–æ–± –Ω–æ–º–∏: ")
        for b in books:
            if b["nom"] == nom:
                b["muallif"] = input("–Ø–Ω–≥–∏ –º—É–∞–ª–ª–∏—Ñ: ")
                b["yil"] = input("–Ø–Ω–≥–∏ –Ω–∞—à—Ä –π–∏–ª–∏: ")
                saqlash()
                print(" –ö–∏—Ç–æ–± —è–Ω–≥–∏–ª–∞–Ω–¥–∏.")
                break
        else:
            print("–ö–∏—Ç–æ–± —Ç–æ–ø–∏–ª–º–∞–¥–∏.")

    elif tanlov == "3":
        nom = input("–é—á–∏—Ä–∏–ª–∞–¥–∏–≥–∞–Ω –∫–∏—Ç–æ–± –Ω–æ–º–∏: ")
        books = [b for b in books if b["nom"] != nom]
        saqlash()
        print("üóë –ö–∏—Ç–æ–± —û—á–∏—Ä–∏–ª–¥–∏.")

    elif tanlov == "4":
        if not books:
            print("–ö–∏—Ç–æ–±–ª–∞—Ä –π—û“õ.")
        else:
            for b in books:
                print(f"{b['nom']} ({b['muallif']}, {b['yil']})")

    elif tanlov == "0":
        print("–ß–∏“õ–∏–ª–¥–∏.")
        break

    else:
        print("–ù–æ—Ç—û“ì—Ä–∏ —Ç–∞–Ω–ª–æ–≤!")




import requests
import random

API_KEY = "your_api_key_here"  # <-- OMDb API –∫–∞–ª–∏—Ç–∏–Ω–≥–∏–∑–Ω–∏ —ë–∑–∏–Ω–≥
janr = input("“ö–∞–Ω–¥–∞–π –∂–∞–Ω—Ä–¥–∞–≥–∏ —Ñ–∏–ª—å–º–Ω–∏ —Ö–æ“≥–ª–∞–π—Å–∏–∑? (–º–∞—Å–∞–ª–∞–Ω: Action, Comedy, Drama): ")

url = f"http://www.omdbapi.com/?apikey={API_KEY}&s={janr}&type=movie"
javob = requests.get(url)
data = javob.json()

if data.get("Search"):
    film = random.choice(data["Search"])
    print(f" –¢–∞–≤—Å–∏—è —ç—Ç–∏–ª–≥–∞–Ω —Ñ–∏–ª—å–º: {film['Title']}")
    print("–ô–∏–ª:", film["Year"])
    print("IMDB ID:", film["imdbID"])
else:
    print("–ë—É –∂–∞–Ω—Ä –±—û–π–∏—á–∞ —Ñ–∏–ª—å–º–ª–∞—Ä —Ç–æ–ø–∏–ª–º–∞–¥–∏ —ë–∫–∏ API –∫–∞–ª–∏—Ç —Ö–∞—Ç–æ.")



